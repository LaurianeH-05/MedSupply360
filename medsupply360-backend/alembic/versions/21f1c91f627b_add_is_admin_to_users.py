"""add is_admin to users

Revision ID: 21f1c91f627b
Revises: 
Create Date: 2025-06-04 02:38:57.979018

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '21f1c91f627b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_index('name', table_name='medicines')
    op.drop_table('salesrecords')
    op.drop_table('orders')
    op.drop_table('medicines')
    op.add_column('users', sa.Column('is_admin', sa.Boolean(), nullable=True))
    op.alter_column('users', 'username',
               existing_type=mysql.VARCHAR(length=50),
               type_=sa.String(length=255),
               nullable=True)
    op.alter_column('users', 'hashed_password',
               existing_type=mysql.VARCHAR(length=128),
               type_=sa.String(length=255),
               nullable=True)
    op.drop_index('username', table_name='users')
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.drop_column('users', 'is_active')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('is_active', mysql.TINYINT(display_width=1), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.create_index('username', 'users', ['username'], unique=True)
    op.alter_column('users', 'hashed_password',
               existing_type=sa.String(length=255),
               type_=mysql.VARCHAR(length=128),
               nullable=False)
    op.alter_column('users', 'username',
               existing_type=sa.String(length=255),
               type_=mysql.VARCHAR(length=50),
               nullable=False)
    op.drop_column('users', 'is_admin')
    op.create_table('salesrecords',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('medicine_id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('sale_date', sa.DATE(), nullable=False),
    sa.Column('quantity_sold', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['medicine_id'], ['medicines.id'], name='salesrecords_ibfk_1', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('orders',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('medicine_id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('recommended_quantity', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('generated_at', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.ForeignKeyConstraint(['medicine_id'], ['medicines.id'], name='orders_ibfk_1', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('medicines',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('batch_number', mysql.VARCHAR(length=100), nullable=False),
    sa.Column('expiry_date', sa.DATE(), nullable=False),
    sa.Column('price', mysql.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('quantity_in_stock', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_index('name', 'medicines', ['name', 'batch_number'], unique=True)
    # ### end Alembic commands ###
